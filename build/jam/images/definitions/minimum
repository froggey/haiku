# This file defines the content of the minimum Haiku image.

SYSTEM_BIN = [ FFilterByBuildFeatures
	"["
	addattr alert arp
	base64 basename bash bc beep bfsinfo
	cal cat catattr checkfs checkitout chgrp chmod chop chown chroot cksum clear
	clockconfig cmp collectcatkeys comm compress copyattr cp csplit cut
	date dc dd desklink df diff diff3 dircolors dirname diskimage draggers
	driveinfo dstcheck du dumpcatalog
	echo eject env error expand expr
	factor false fdinfo ffm filepanel finddir findpaths fmt fold fortune fstrim
	ftp ftpd funzip
	getarch getlimits groupadd groupdel groupmod groups gzip gzexe
	hd head hey hostname
	id ideinfo@ide ident idestatus@ide ifconfig <bin>install iroster isvolume
	join kernel_debugger keymap keystore kill
	link linkcatkeys listarea listattr listimage listdev
	listport listres listsem listusb ln locale logger login logname ls lsindex
	makebootable md5sum merge message mimeset mkdir mkfifo mkfs mkindex mktemp
	modifiers mount mountvolume mv
	netcat netstat nl nohup notify nproc
	od open
	package package_repo passwd paste patch pathchk pc ping ping6 pkgman
	pr prio printenv printf profile ps ptx pwd
	query quit
	rc readlink reindex release renice rlog rm rmattr rmindex rmdir roster
	route
	safemode screen_blanker screenmode sdiff setarch setmime settype setversion
	setvolume seq sha1sum sha256sum shred shuf shutdown sleep
	sort split stat strace stty su sum sync sysinfo
	tac tail tcpdump tcptester tee telnet telnetd test timeout top touch
	tr traceroute trash true truncate tsort tty
	uname unchop unexpand unmount uniq unlink unzip unzipsfx
	uptime urlwrapper useradd userdel
	vdir version vmstat
	waitfor watch wc whoami writembr@x86,x86_64 xres
	yes
	zdiff zforce zgrep zip zipcloak <bin>zipgrep zipnote zipsplit zmore znew
] ;

SYSTEM_APPS = [ FFilterByBuildFeatures
	AboutSystem ActivityMonitor
	BootManager@x86,x86_64
	CharacterMap
	Debugger DeskCalc Devices DiskProbe DiskUsage DriveSetup
	Expander
	NetworkStatus
	ProcessController
	ShowImage StyledEdit
	Terminal TextSearch
	Workspaces
] ;

DESKBAR_APPLICATIONS =
	ActivityMonitor
	CharacterMap
	DeskCalc Devices DiskProbe DiskUsage DriveSetup
	Expander
	StyledEdit
	Terminal
;

DESKBAR_DESKTOP_APPLETS =
	NetworkStatus
	ProcessController
	Workspaces
;

SYSTEM_PREFERENCES = [ FFilterByBuildFeatures
	Appearance
	Backgrounds
	<preference>Deskbar
	FileTypes
	Keyboard Keymap
	Locale
	Mouse
	Network Notifications
	Screen Shortcuts
	Time Touchpad <preference>Tracker
	VirtualMemory
] ;

SYSTEM_DEMOS = ;


rule HaikuImageGetSystemLibs
{
	return
		# libs with special grist
		[ MultiArchDefaultGristFiles libroot.so : revisioned ]
		$(HAIKU_SHARED_LIBSTDC++_$(TARGET_PACKAGING_ARCH))
		$(HAIKU_SHARED_LIBSUPC++_$(TARGET_PACKAGING_ARCH))
		# libs with standard grist
		[ MultiArchDefaultGristFiles [ FFilterByBuildFeatures
			libbe.so libbsd.so libbnetapi.so
			libdebug.so libdevice.so
			libgnu.so
			libnetwork.so
			libpackage.so
			libtextencoding.so libtracker.so libtranslation.so
		] ]
		;
}


rule HaikuImageGetPrivateSystemLibs
{
	return [ MultiArchDefaultGristFiles [ FFilterByBuildFeatures
		libalm.so
		libpackage-add-on-libsolv.so
		libroot-addon-icu.so
	] ] ;
}


SYSTEM_SERVERS = [ FFilterByBuildFeatures
	app_server
	debug_server dns_resolver_server
	input_server
	keystore_server
	mount_server
	net_server notification_server
	package_daemon power_daemon
	registrar
	syslog_daemon
] ;

SYSTEM_NETWORK_DEVICES =
	ethernet
	loopback
;

SYSTEM_NETWORK_DATALINK_PROTOCOLS =
	<module>arp
	ethernet_frame
	#ipv6_datagram
	loopback_frame
;

#SYSTEM_NETWORK_PPP = ipcp modem pap pppoe ;

SYSTEM_NETWORK_PROTOCOLS =
	#icmp icmp6 ipv4 ipv6
	icmp ipv4
	tcp
	udp unix
;

SYSTEM_ADD_ONS_ACCELERANTS = [ FFilterByBuildFeatures
	x86,x86_64 @{
		vesa.accelerant
		vmware.accelerant
	}@ # x86,x86_64
] ;

SYSTEM_ADD_ONS_TRANSLATORS =
	STXTTranslator
;

SYSTEM_ADD_ONS_LOCALE_CATALOGS =
	<catalog-addon>plaintext
;

SYSTEM_ADD_ONS_MEDIA = ;

SYSTEM_ADD_ONS_MEDIA_PLUGINS =  ;

SYSTEM_ADD_ONS_PRINT = ;

SYSTEM_ADD_ONS_PRINT_TRANSPORT = ;

SYSTEM_ADD_ONS_SCREENSAVERS = ;

SYSTEM_ADD_ONS_DRIVERS_AUDIO = ;

SYSTEM_ADD_ONS_DRIVERS_AUDIO_OLD = ;

SYSTEM_ADD_ONS_DRIVERS_GRAPHICS = [ FFilterByBuildFeatures
	x86,x86_64 @{
		vesa
		vmware
	}@ # x86,x86_64
] ;

SYSTEM_ADD_ONS_DRIVERS_MIDI = ;

SYSTEM_ADD_ONS_DRIVERS_NET = [ FFilterByBuildFeatures
	x86,x86_64 @{
		3com
		atheros813x ar81xx attansic_l1 attansic_l2
		broadcom440x broadcom570x
		dec21xxx
		ipro100 ipro1000
		jmicron2x0
		marvell_yukon
		nforce
		pcnet
		rtl8139 rtl81xx
		sis19x syskonnect
		via_rhine vt612x
	}@ # x86_64

	etherpci
	pegasus
	sis900
	usb_asix usb_davicom usb_ecm
	wb840

	# WLAN drivers
	x86 @{
		aironetwifi atheroswifi
		broadcom43xx
		iprowifi2100 iprowifi2200 iprowifi3945 iprowifi4965
		marvell88w8363 marvell88w8335
		ralinkwifi
		wavelanwifi
	}@ # x86

	# WWAN drivers
	#usb_beceemwmx@gpl
] ;

SYSTEM_ADD_ONS_DRIVERS_POWER = [ FFilterByBuildFeatures
	acpi_button@x86
] ;

SYSTEM_ADD_ONS_BUS_MANAGERS = [ FFilterByBuildFeatures
	acpi@x86,x86_64	agp_gart@x86,x86_64 ata@ata
	config_manager
	firewire@x86
	ide@ide scsi isa@x86,x86_64
	pci ps2@x86,x86_64
	random
	usb
	virtio
] ;

SYSTEM_ADD_ONS_FILE_SYSTEMS =
	attribute_overlay
	bfs bindfs btrfs
	exfat ext2
	fat
	iso9660
	ntfs
	packagefs
	reiserfs@x86
	udf
	write_overlay
;

# symlink to home on desktop
AddSymlinkToHaikuImage home Desktop : /boot/home : Home ;

# global settings when a package is installed in ~/config
AddDirectoryToHaikuImage home config settings global ;

# user scripts and data files
local userBootScripts = UserBootscript UserSetupEnvironment.sample ;
SEARCH on $(userBootScripts) = [ FDirName $(HAIKU_TOP) data config boot ] ;
AddFilesToHaikuImage home config settings boot : $(userBootScripts) ;

local etcDir = [ FDirName $(HAIKU_TOP) data etc ] ;
local etcFiles = inputrc profile ;
etcFiles = $(etcFiles:G=etc) ;
SEARCH on $(etcFiles) = $(etcDir) ;
etcFiles += <etc>termcap ;
AddFilesToHaikuImage system settings etc : $(etcFiles) ;

local profileFiles = [ Glob $(etcDir)/profile.d : *.sh ] ;
profileFiles = $(profileFiles:G=profile-d) ;
AddDirectoryToHaikuImage system settings etc profile.d ;
AddFilesToHaikuImage system settings etc profile.d : $(profileFiles) ;

local driverSettingsFiles = <driver-settings>kernel ;
SEARCH on $(driverSettingsFiles)
	= [ FDirName $(HAIKU_TOP) data settings kernel drivers ] ;
AddFilesToHaikuImage home config settings kernel drivers
	: $(driverSettingsFiles) ;

local networkSettingsFiles = <network-settings>services ;
SEARCH on $(networkSettingsFiles)
	= [ FDirName $(HAIKU_TOP) data settings network ] ;
AddFilesToHaikuImage system settings network : $(networkSettingsFiles) ;

# fresh install indicator file for the post install scripts
SEARCH on <post-install>fresh_install
	= [ FDirName $(HAIKU_TOP) data system settings ] ;
AddFilesToHaikuImage system settings : <post-install>fresh_install ;
